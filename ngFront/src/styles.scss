@use '../node_modules/@angular/material' as mat;
@use './src/app/components/carousel/carousel-theme' as carousel;
@use "sass:map";
@use "./colors" as colors;
@include mat.core();


//Specific components theme 'as color as typography'
@include mat.core-theme(colors.$light-theme);
@include mat.button-theme(colors.$light-theme);
@include mat.snack-bar-theme(colors.$light-theme);
@include mat.sidenav-theme(colors.$light-theme);
@include mat.select-theme(colors.$light-theme);
@include mat.toolbar-theme(colors.$light-theme);
@include mat.icon-theme(colors.$light-theme);
@include mat.list-theme(colors.$light-theme);
@include mat.form-field-theme(colors.$light-theme);
@include mat.progress-bar-theme(colors.$light-theme);
@include mat.input-theme(colors.$light-theme);
@include mat.divider-theme(colors.$light-theme);
@include mat.menu-theme(colors.$light-theme);
@include mat.progress-spinner-theme(colors.$light-theme);
@include mat.tooltip-theme(colors.$light-theme);
@include mat.expansion-theme(colors.$light-theme);
// @include mat.all-component-theme(colors.$light-theme);
// @include mat.button
.dark-theme {
  @include mat.core-color(colors.$dark-theme);
  @include mat.tooltip-color(colors.$dark-theme);
  @include mat.button-color(colors.$dark-theme);
  @include mat.sidenav-color(colors.$dark-theme);
  @include mat.select-color(colors.$dark-theme);
  @include mat.toolbar-color(colors.$dark-theme);
  @include mat.icon-color(colors.$dark-theme);
  @include mat.list-color(colors.$dark-theme);
  @include mat.form-field-color(colors.$dark-theme);
  @include mat.progress-bar-color(colors.$dark-theme);
  @include mat.input-color(colors.$dark-theme);
  @include mat.divider-color(colors.$dark-theme);
  @include mat.snack-bar-color(colors.$dark-theme);
  @include mat.menu-color(colors.$dark-theme);
  @include mat.progress-spinner-color(colors.$dark-theme);
  @include mat.expansion-color(colors.$dark-theme);
  //@include mat.all-component-typographies($dark-theme);
}



$backgrounds: map.get(colors.$Light_foreground, base);
$lkj: mat.get-color-from-palette(colors.$Light_foreground, divider);
$is-dark-theme: map.get(colors.$Light_colorConfig, 'is-dark');



//Typography Config
$typography-config: mat.get-typography-config(colors.$light-theme);
//$my-font-family: mat.font-family($typography-config);

@mixin elevation($value){@include mat.elevation($value)}


// .mat-button-focus-overlay {
//  background-color: darkslateblue;
//   overflow: visible;
//   opacity: 1;
//}
//.mat-button-focus-overlay {
  //background: map.get($Light_foreground, text);
  //background: map.get($background, status-bar);
//}

//.mat-icon-button:hover {
//   background-color: mat.color($background, hover);
// }
//@include mat.button-theme.theme($theme-or-color-config);

//@include mat.strong-focus-indicators((
//  border-style: solid,
//  border-width: 2px,
//  border-radius: 12px,
//));
//@include mat.strong-focus-indicators-theme($dark-theme);

//.mat-button:hover {
//  color: mat.get-color-from-palette($light-primary, darker-contrast);
//  background-color: mat.get-color-from-palette($light-primary, 300);
//  transform: scale(1.05);
//  z-index: 1;
//}

//$kids-typography: mat.define-typography-config(
//  // Specify "Comic Sans" as the default font family for all levels.
//  $font-family: 'Comic Sans',
//);

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

@include carousel.theme(colors.$light-theme);

// $icon-bgc:$Light_primary-600;

.light {
  background-color: colors.$Light_primary-500
}

.dark {
  background-color: colors.$dark_primary-600;
}
